From d160c35c46a8690afe4a347d17cf2c2bc536810c Mon Sep 17 00:00:00 2001
From: Hinnerk van Bruinehsen <h.v.bruinehsen@fu-berlin.de>
Date: Mon, 21 Aug 2017 16:07:00 +0200
Subject: [PATCH 2/2] AM335x: add more devices to dev_p_regs[] and add IRQ defs

---
 include/plat/am335x/plat/machine.h          | 133 +++++++++++++++++++-
 include/plat/am335x/plat/machine/devices.h  |  68 +++++++---
 include/plat/am335x/plat/machine/hardware.h |  59 +++++++--
 3 files changed, 229 insertions(+), 31 deletions(-)

diff --git a/include/plat/am335x/plat/machine.h b/include/plat/am335x/plat/machine.h
index ec0f2859..3026b93f 100644
--- src/kernel/sel4/include/plat/am335x/plat/machine.h
+++ src/kernel/sel4/include/plat/am335x/plat/machine.h
@@ -14,10 +14,135 @@
 #define N_INTERRUPTS 128

 enum IRQConstants {
-    DMTIMER0_IRQ = 66,
-    SYS_INT_3PGSWRXINT0 = 41,
-    SYS_INT_3PGSWTXINT0 = 42,
-    maxIRQ = 127
+    EMU_INT             =   0,
+    COMMTX              =   1,
+    COMMRX              =   2,
+    BENCH               =   3,
+    ELM_IRQ             =   4,
+    SSM_WFI_IRQ         =   5,
+    SSM_IRQ             =   6,
+    NMI                 =   7,
+    SEC_EVNT            =   8,
+    L3DEBUG             =   9,
+    L3APP_INT           =  10,
+    PRCM_INT            =  11,
+    EDMACOMP_INT        =  12,
+    EDMAMPERR           =  13,
+    EDMAERR_INT         =  14,
+    WDT_0_INT           =  15,
+    ADC_TSC_GEN_INT     =  16,
+    USB_SS_INT          =  17,
+    USB_INT0            =  18,
+    USB_INT1            =  19,
+    PRU_ICSS_EVTOUT_0   =  20,
+    PRU_ICSS_EVTOUT_1   =  21,
+    PRU_ICSS_EVTOUT_2   =  22,
+    PRU_ICSS_EVTOUT_3   =  23,
+    PRU_ICSS_EVTOUT_4   =  24,
+    PRU_ICSS_EVTOUT_5   =  25,
+    PRU_ICSS_EVTOUT_6   =  26,
+    PRU_ICSS_EVTOUT_7   =  27,
+    MMC_SD1_INT         =  28,
+    MMC_SD2_INT         =  29,
+    I2C_2_INT           =  30,
+    E_CAP_0_INT         =  31,
+    GPIO_INT2_A         =  32,
+    GPIO_INT2_B         =  33,
+    USB_WAKEUP          =  34,
+    PCIE_WAKEUP         =  35,
+    LCDC_INT            =  36,
+    GFX_INT             =  37,
+    /* Reserved         =  38, */
+    E_PWM_2_INT         =  39,
+    SYS_INT_3PGSWRXTHR0 =  40,
+    SYS_INT_3PGSWRXINT0 =  41,
+    SYS_INT_3PGSWTXINT0 =  42,
+    CPSW_MISC_PULSE     =  43,
+    UART3_INT           =  44,
+    UART4_INT           =  45,
+    UART5_INT           =  46,
+    E_CAP_INT           =  47,
+    /* Reserved         =  48, */
+    /* Reserved         =  49, */
+    /* Reserved         =  50, */
+    /* Reserved         =  51, */
+    DCAN_0_INT_0        =  52,
+    DCAN_0_INT_1        =  53,
+    DCAN_0_PARITY       =  54,
+    DCAN_1_INT_0        =  55,
+    DCAN_1_INT_1        =  56,
+    DCAN_1_PARITY       =  57,
+    E_PWM_0_TZ_INT      =  58,
+    E_PWM_1_TZ_INT      =  59,
+    E_PWM_2_TZ_INT      =  60,
+    E_CAP_2_INT         =  61,
+    GPIO_INT3_A         =  62,
+    GPIO_INT3_B         =  63,
+    MMC_SD0_INT         =  64,
+    MC_SPI_0_INT        =  65,
+    DMTIMER0_IRQ        =  66,
+    DMTIMER1_1MS_IRQ    =  67,
+    DMTIMER2_IRQ        =  68,
+    DMTIMER3_IRQ        =  69,
+    I2C_0_INT           =  70,
+    I2C_1_INT           =  71,
+    UART0_INT           =  72,
+    UART1_INT           =  73,
+    UART2_INT           =  74,
+    RTC_INT             =  75,
+    RTC_ALARM_INT       =  76,
+    MB_INT_0            =  77,
+    M3_TXEV             =  78,
+    E_QEP_0_INT         =  79,
+    MCA_TX_INT_0        =  80,
+    MCA_RX_INT_0        =  81,
+    MCA_TX_INT_1        =  82,
+    MCA_RX_INT_1        =  83,
+    /* Reserved         =  84, */
+    /* Reserved         =  85, */
+    E_PWM_0_INT         =  86,
+    E_PWM_1_INT         =  87,
+    E_QEP_1_INT         =  88,
+    E_QEP_2_INT         =  89,
+    DMA_INTR_PIN2       =  90,
+    WDT_1_INT           =  91,
+    DMTIMER_4_IRQ       =  92,
+    DMTIMER_5_IRQ       =  93,
+    DMTIMER_6_IRQ       =  94,
+    DMTIMER_7_IRQ       =  95,
+    GPIO_INT0_A         =  96,
+    GPIO_INT0_B         =  97,
+    GPIO_INT1_A         =  98,
+    GPIO_INT1_B         =  99,
+    GPMC_INT            = 100,
+    DDR_ERR_0           = 101,
+    AES_0_IRQ_S         = 102,
+    AES_0_IRQ_P         = 103,
+    /* Reserved         = 104, */
+    /* Reserved         = 105, */
+    /* Reserved         = 106, */
+    /* Reserved         = 107, */
+    SHA_IRQ_S           = 108,
+    SHA_IRQ_P           = 109,
+    FPKA_SINTREQUEST_S  = 110,
+    RNG_IRQ             = 111,
+    TC_ERR_INT_0        = 112,
+    TC_ERR_INT_1        = 113,
+    TC_ERR_INT_2        = 114,
+    ADC_TSC_PENINT      = 115,
+    /* Reserved         = 116, */
+    /* Reserved         = 117, */
+    /* Reserved         = 118, */
+    /* Reserved         = 119, */
+    SMRFLX_MPU          = 120,
+    SMRFLX_CORE         = 121,
+    /* Reserved         = 122, */
+    DMA_INTR_PIN0       = 123,
+    DMA_INTR_PIN1       = 124,
+    MC_SPI_1_INT        = 125,
+    /* Reserved         = 126, */
+    /* Reserved         = 127, */
+    maxIRQ              = 127
 } platform_interrupt_t;

 #define IRQ_CNODE_BITS 12
diff --git a/include/plat/am335x/plat/machine/devices.h b/include/plat/am335x/plat/machine/devices.h
index 3f376b5c..46c9b334 100644
--- src/kernel/sel4/include/plat/am335x/plat/machine/devices.h
+++ src/kernel/sel4/include/plat/am335x/plat/machine/devices.h
@@ -20,19 +20,59 @@


 /* Other devices on the SoC. */
-#define INTC_PADDR      0x48200000
-#define UART0_PADDR     0x44E09000
-#define DMTIMER0_PADDR  0x44E05000
-#define DMTIMER2_PADDR  0x48040000
-#define DMTIMER3_PADDR  0x48042000
-#define DMTIMER4_PADDR  0x48044000
-#define DMTIMER5_PADDR  0x48046000
-#define DMTIMER6_PADDR  0x48048000
-#define DMTIMER7_PADDR  0x4804A000
-#define WDT1_PADDR      0x44e35000
-#define CMPER_PADDR     0x44e00000
-#define CTRL_PADDR      0x44E10000
-#define PRCM_PADDR      0x44E00000
-#define CPSW_PADDR      0x4A100000
+#define PRCM_PADDR            0x44E00000
+
+/*
+ * PRCM_SIZE is the Size of the CM_ and PRM_ registers
+ * combined, because these registers are smaller than
+ * 4k (min Pagesize) and somewhat belong together
+ */
+#define PRCM_SIZE             0x1300
+
+#define DMTIMER0_PADDR        0x44E05000   /*   4 kB */
+#define GPIO0_PADDR           0x44E07000   /*   4 kB */
+#define UART0_PADDR           0x44E09000   /*   4 kB */
+#define I2C0_PADDR            0x44E0B000   /*   4 kB */
+#define ADC_TSC_PADDR         0x44E0D000   /*   4 kB */
+#define CTRL_PADDR            0x44E10000   /* 128 kB */
+#define DMTIMER1_1MS_PADDR    0x44E31000   /*   4 kB */
+#define WDT1_PADDR            0x44E35000   /*   4 kB */
+#define RTCSS_PADDR           0x44E3E000   /*   4 kB */
+#define UART1_PADDR           0x48022000   /*   4 kB */
+#define UART2_PADDR           0x48024000   /*   4 kB */
+#define I2C1_PADDR            0x4802AFFF   /*   4 kB */
+#define MC_SPI0_PADDR         0x48030000   /*   4 kB */
+#define MC_ASP0_CFG_PADDR     0x48038000   /*   8 kB */
+#define MC_ASP1_CFG_PADDR     0x4803C000   /*   8 kB */
+#define DMTIMER2_PADDR        0x48040000   /*   4 kB */
+#define DMTIMER3_PADDR        0x48042000   /*   4 kB */
+#define DMTIMER4_PADDR        0x48044000   /*   4 kB */
+#define DMTIMER5_PADDR        0x48046000   /*   4 kB */
+#define DMTIMER6_PADDR        0x48048000   /*   4 kB */
+#define DMTIMER7_PADDR        0x4804A000   /*   4 kB */
+#define GPIO1_PADDR           0x4804C000   /*   4 kB */
+#define MMCHS0_PADDR          0x48060000   /*   4 kB */
+#define ELM_PADDR             0x48080000   /*  64 kB */
+#define MAILBOX_0_PADDR       0x480C8000   /*   4 kB */
+#define SPINLOCK_PADDR        0x480CA000   /*   4 kB */
+#define OCP_WATCHPOINT_PADDR  0x4818C000   /*   4 kB */
+#define I2C2_PADDR            0x4819C000   /*   4 kB */
+#define MC_SPI1_PADDR         0x481A0000   /*   4 kB */
+#define UART3_PADDR           0x481A6000   /*   4 kB */
+#define UART4_PADDR           0x481A8000   /*   4 kB */
+#define UART5_PADDR           0x481AA000   /*   4 kB */
+#define GPIO2_PADDR           0x481AC000   /*   4 kB */
+#define GPIO3_PADDR           0x481AE000   /*   4 kB */
+#define DCAN0_PADDR           0x481CC000   /*   8 kB */
+#define DCAN1_PADDR           0x481D0000   /*   8 kB */
+#define MMC1_PADDR            0x481D8000   /*   4 kB */
+#define INTC_PADDR            0x48200000   /*   4 kB */
+#define MPUSS_PADDR           0x48240000   /*   4 kB */
+#define PWM0_PADDR            0x48300000   /*   4 kB */
+#define PWM1_PADDR            0x48302000   /*   4 kB */
+#define PWM2_PADDR            0x48304000   /*   4 kB */
+#define LCD_PADDR             0x4830E000   /*   4 kB */
+#define CPSW_PADDR            0x4A100000   /*  32 kB */
+#define PRU_ICSS_PADDR        0x4A300000   /* 512 KB */

 #endif
diff --git a/include/plat/am335x/plat/machine/hardware.h b/include/plat/am335x/plat/machine/hardware.h
index 597e44b1..844182d0 100644
--- src/kernel/sel4/include/plat/am335x/plat/machine/hardware.h
+++ src/kernel/sel4/include/plat/am335x/plat/machine/hardware.h
@@ -38,7 +38,6 @@ static const kernel_frame_t BOOT_RODATA kernel_devices[] = {
         WDT1_PADDR,
         WDT1_PPTR,
         true  /* armExecuteNever */
-    },
 #ifdef CONFIG_PRINTING
     },
     {
@@ -65,18 +64,52 @@ static const p_region_t BOOT_RODATA avail_p_regs[] = {

 static const p_region_t BOOT_RODATA dev_p_regs[] = {
     /* SoC devices: */
-    { /* .start = */ UART0_PADDR,    /* .end = */ UART0_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER2_PADDR, /* .end = */ DMTIMER2_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER3_PADDR, /* .end = */ DMTIMER3_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER4_PADDR, /* .end = */ DMTIMER4_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER5_PADDR, /* .end = */ DMTIMER5_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER6_PADDR, /* .end = */ DMTIMER6_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ DMTIMER7_PADDR, /* .end = */ DMTIMER7_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ WDT1_PADDR,     /* .end = */ WDT1_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ CMPER_PADDR,    /* .end = */ CMPER_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ CTRL_PADDR,     /* .end = */ CTRL_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ PRCM_PADDR,     /* .end = */ PRCM_PADDR + (1 << PAGE_BITS) },
-    { /* .start = */ CPSW_PADDR,     /* .end = */ CPSW_PADDR + (1 << (PAGE_BITS + 4)) }
+    { /* .start = */ PRCM_PADDR,           /* .end = */ PRCM_PADDR           + (      PRCM_SIZE     ) },
+    /* DMTIMER0 is used by the seL4 kernel and therefore is not mapped into userspace */
+    { /* .start = */ GPIO0_PADDR,          /* .end = */ GPIO0_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART0_PADDR,          /* .end = */ UART0_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ I2C0_PADDR,           /* .end = */ I2C0_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ ADC_TSC_PADDR,        /* .end = */ ADC_TSC_PADDR        + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ CTRL_PADDR,           /* .end = */ CTRL_PADDR           + (1 << (PAGE_BITS + 5)) },
+    { /* .start = */ DMTIMER1_1MS_PADDR,   /* .end = */ DMTIMER1_1MS_PADDR   + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ WDT1_PADDR,           /* .end = */ WDT1_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ RTCSS_PADDR,          /* .end = */ RTCSS_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART1_PADDR,          /* .end = */ UART1_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART2_PADDR,          /* .end = */ UART2_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ I2C1_PADDR,           /* .end = */ I2C1_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ MC_SPI0_PADDR,        /* .end = */ MC_SPI0_PADDR        + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ MC_ASP0_CFG_PADDR,    /* .end = */ MC_ASP0_CFG_PADDR    + (1 << (PAGE_BITS + 1)) },
+    { /* .start = */ MC_ASP1_CFG_PADDR,    /* .end = */ MC_ASP1_CFG_PADDR    + (1 << (PAGE_BITS + 1)) },
+    { /* .start = */ DMTIMER2_PADDR,       /* .end = */ DMTIMER2_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DMTIMER3_PADDR,       /* .end = */ DMTIMER3_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DMTIMER4_PADDR,       /* .end = */ DMTIMER4_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DMTIMER5_PADDR,       /* .end = */ DMTIMER5_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DMTIMER6_PADDR,       /* .end = */ DMTIMER6_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DMTIMER7_PADDR,       /* .end = */ DMTIMER7_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ GPIO1_PADDR,          /* .end = */ GPIO1_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ MMCHS0_PADDR,         /* .end = */ MMCHS0_PADDR         + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ ELM_PADDR,            /* .end = */ ELM_PADDR            + (1 << (PAGE_BITS + 4)) },
+    { /* .start = */ MAILBOX_0_PADDR,      /* .end = */ MAILBOX_0_PADDR      + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ SPINLOCK_PADDR,       /* .end = */ SPINLOCK_PADDR       + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ OCP_WATCHPOINT_PADDR, /* .end = */ OCP_WATCHPOINT_PADDR + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ I2C2_PADDR,           /* .end = */ I2C2_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ MC_SPI1_PADDR,        /* .end = */ MC_SPI1_PADDR        + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART3_PADDR,          /* .end = */ UART3_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART4_PADDR,          /* .end = */ UART4_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ UART5_PADDR,          /* .end = */ UART5_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ GPIO2_PADDR,          /* .end = */ GPIO2_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ GPIO3_PADDR,          /* .end = */ GPIO3_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ DCAN0_PADDR,          /* .end = */ DCAN0_PADDR          + (1 << (PAGE_BITS + 1)) },
+    { /* .start = */ DCAN1_PADDR,          /* .end = */ DCAN1_PADDR          + (1 << (PAGE_BITS + 1)) },
+    { /* .start = */ MMC1_PADDR,           /* .end = */ MMC1_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ INTC_PADDR,           /* .end = */ INTC_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ MPUSS_PADDR,          /* .end = */ MPUSS_PADDR          + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ PWM0_PADDR,           /* .end = */ PWM0_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ PWM1_PADDR,           /* .end = */ PWM1_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ PWM2_PADDR,           /* .end = */ PWM2_PADDR           + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ LCD_PADDR,            /* .end = */ LCD_PADDR            + (1 <<  PAGE_BITS     ) },
+    { /* .start = */ CPSW_PADDR,           /* .end = */ CPSW_PADDR           + (1 << (PAGE_BITS + 3)) },
+    { /* .start = */ PRU_ICSS_PADDR,       /* .end = */ PRU_ICSS_PADDR       + (1 << (PAGE_BITS + 7)) }
     /* Board devices. */
     /* TODO: This should ultimately be replaced with a more general solution. */
 };
--
2.18.0
